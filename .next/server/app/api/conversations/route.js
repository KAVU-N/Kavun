"use strict";(()=>{var e={};e.id=4003,e.ids=[4003],e.modules={11185:e=>{e.exports=require("mongoose")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},12781:e=>{e.exports=require("stream")},73837:e=>{e.exports=require("util")},39403:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>S,originalPathname:()=>j,patchFetch:()=>x,requestAsyncStorage:()=>b,routeModule:()=>k,serverHooks:()=>w,staticGenerationAsyncStorage:()=>D,staticGenerationBailout:()=>Z});var a={};r.r(a),r.d(a,{GET:()=>h,POST:()=>v});var n=r(95419),o=r(69108),i=r(99678),l=r(78070),s=r(22345),u=r(7348),d=r(41773),c=r(52055),m=r(7439),p=r(46082),g=r.n(p);async function y(e){let t=(0,m.headers)().get("Authorization"),r=t?.replace("Bearer ","");if(!r)return console.error("Token bulunamadı"),null;try{console.log("Token doğrulanıyor...");let e=process.env.JWT_SECRET||"default_secret";console.log("JWT Secret kullanılıyor (ilk 5 karakter):",e.substring(0,5)+"...");let t=g().verify(r,e);return console.log("Token başarıyla doğrulandı:",{email:t.email,name:t.name,id:t.userId||t.id||t._id}),{...t,id:t.userId||t.id||t._id}}catch(e){return console.error("Token doğrulama hatası:",e),null}}function f(e){let t=new Date,r=new Date(e);if(r.toDateString()===t.toDateString())return r.toLocaleTimeString("tr-TR",{hour:"2-digit",minute:"2-digit"});let a=new Date(t);return(a.setDate(t.getDate()-1),r.toDateString()===a.toDateString())?"D\xfcn":7>Math.floor((t.getTime()-r.getTime())/864e5)?["Pazar","Pazartesi","Salı","\xc7arşamba","Perşembe","Cuma","Cumartesi"][r.getDay()]:r.toLocaleDateString("tr-TR",{day:"2-digit",month:"2-digit",year:"numeric"})}async function h(e){console.log("GET /api/conversations isteği alındı");try{let t=await y(e);if(!t)return console.error("Ge\xe7ersiz veya eksik token"),l.Z.json({error:"Oturum a\xe7manız gerekiyor"},{status:401});if(console.log("GET Conversations - User info from token:",t),!t.id)return console.error("Token i\xe7inde kullanıcı ID bilgisi yok"),l.Z.json({error:"Kullanıcı kimliği bulunamadı"},{status:400});try{console.log("MongoDB bağlantısı kuruluyor..."),await (0,s.Z)(),console.log("MongoDB bağlantısı başarılı")}catch(e){return console.error("MongoDB bağlantı hatası:",e),l.Z.json({error:"Veritabanı bağlantı hatası"},{status:500})}console.log(`Kullanıcı ID: ${t.id} i\xe7in konuşmalar aranıyor...`);let r=await c.Z.findById(t.id);if(console.log("Kullanıcı veritabanında mevcut mu:",!!r),!r){console.log("Kullanıcı veritabanında bulunamadı, alternatif ID formatı deneniyor...");let e=await c.Z.findOne({email:t.email});e?(console.log("Kullanıcı email ile bulundu, ID:",e._id),t.id=e._id.toString()):console.log("Kullanıcı hi\xe7bir şekilde bulunamadı")}let a=await u.Z.find({participants:t.id}).populate("participants","name email university role profilePicture").sort({updatedAt:-1});if(console.log("Bulunan konuşma sayısı:",a.length),0===a.length){console.log("Kullanıcı i\xe7in konuşma bulunamadı:",t.id);let e=await u.Z.countDocuments();console.log("Veritabanındaki toplam konuşma sayısı:",e);let r=await d.Z.find({$or:[{sender:t.id},{receiver:t.id}]}).limit(5);return console.log("Kullanıcının mesaj sayısı:",r.length),l.Z.json([])}console.log("Konuşmalar formatlanıyor...");let n=(await Promise.all(a.map(async e=>{let r=e.participants.find(e=>e._id.toString()!==t.id);if(!r)return console.log("Konuşmada diğer katılımcı bulunamadı:",e._id),null;console.log("Diğer katılımcı bulundu:",r.name);let a=await d.Z.findOne({$or:[{sender:t.id,receiver:r._id},{sender:r._id,receiver:t.id}]}).sort({createdAt:-1});console.log("Son mesaj bulundu mu:",!!a);let n=await d.Z.countDocuments({sender:r._id,receiver:t.id,read:!1});return console.log(`${r.name} ile okunmamış mesaj sayısı:`,n),{_id:r._id,name:r.name,email:r.email,lastMessage:a?a.content:"",date:a?f(a.createdAt):f(e.createdAt),unread:n,avatar:r.profilePicture}}))).filter(e=>null!==e);return console.log("Formatlanmış konuşma sayısı:",n.length),l.Z.json(n)}catch(e){return console.error("Konuşmalar getirilemedi:",e),l.Z.json({error:`Konuşmalar getirilemedi: ${e.message||"Bilinmeyen hata"}`},{status:500})}}async function v(e){console.log("POST /api/conversations isteği alındı");try{let t;let r=await y(e);if(!r)return l.Z.json({error:"Oturum a\xe7manız gerekiyor"},{status:401});if(console.log("POST Conversation - User info from token:",r),!r.id)return l.Z.json({error:"Kullanıcı kimliği bulunamadı"},{status:400});try{await (0,s.Z)(),console.log("MongoDB bağlantısı başarılı")}catch(e){return console.error("MongoDB bağlantı hatası:",e),l.Z.json({error:"Veritabanı bağlantı hatası"},{status:500})}try{t=await e.json(),console.log("İstek verisi:",t)}catch(e){return console.error("İstek verisi \xe7\xf6z\xfcmlemede hata:",e),l.Z.json({error:"İstek verisi \xe7\xf6z\xfcmlenemedi"},{status:400})}if(!t.participants||!Array.isArray(t.participants)||t.participants.length<1)return l.Z.json({error:"Ge\xe7ersiz katılımcılar"},{status:400});t.participants.includes(r.id)||t.participants.push(r.id);let a=await u.Z.findOne({participants:{$all:t.participants,$size:t.participants.length}});if(a)return l.Z.json(a);let n=await u.Z.create({participants:t.participants,lastMessage:t.lastMessage||""});return l.Z.json(n,{status:201})}catch(e){return console.error("Konuşma oluşturulamadı:",e),l.Z.json({error:`Konuşma oluşturulamadı: ${e.message||"Bilinmeyen hata"}`},{status:500})}}let k=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/conversations/route",pathname:"/api/conversations",filename:"route",bundlePath:"app/api/conversations/route"},resolvedPagePath:"C:\\Users\\eren\\Kavun, organization\\app\\api\\conversations\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:b,staticGenerationAsyncStorage:D,serverHooks:w,headerHooks:S,staticGenerationBailout:Z}=k,j="/api/conversations/route";function x(){return(0,i.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:D})}},22345:(e,t,r)=>{r.d(t,{Z:()=>l});var a=r(11185),n=r.n(a);let o=process.env.MONGODB_URI;if(!o)throw Error("MongoDB URI bulunamadı. L\xfctfen .env dosyasını kontrol edin.");let i=global.mongoose||{conn:null,promise:null};global.mongoose||(global.mongoose=i);let l=async function(){if(i.conn)return i.conn;i.promise||(i.promise=n().connect(o,{bufferCommands:!1}).then(e=>e));try{i.conn=await i.promise}catch(e){throw i.promise=null,e}return i.conn}},7348:(e,t,r)=>{r.d(t,{Z:()=>i});var a=r(11185),n=r.n(a);let o=new a.Schema({participants:[{type:a.Schema.Types.ObjectId,ref:"User"}],lastMessage:{type:String,default:""},updatedAt:{type:Date,default:Date.now},createdAt:{type:Date,default:Date.now}});o.index({participants:1},{unique:!1});let i=n().models.Conversation||n().model("Conversation",o)},41773:(e,t,r)=>{r.d(t,{Z:()=>i});var a=r(11185),n=r.n(a);let o=new a.Schema({sender:{type:a.Schema.Types.ObjectId,ref:"User",required:[!0,"G\xf6nderen alanı zorunludur"]},receiver:{type:a.Schema.Types.ObjectId,ref:"User",required:[!0,"Alıcı alanı zorunludur"]},content:{type:String,required:[!0,"Mesaj i\xe7eriği zorunludur"],trim:!0,maxlength:[500,"Mesaj en fazla 500 karakter olabilir"]},read:{type:Boolean,default:!1},createdAt:{type:Date,default:Date.now}}),i=n().models.Message||n().model("Message",o)},52055:(e,t,r)=>{r.d(t,{Z:()=>i});var a=r(11185),n=r.n(a);let o=new a.Schema({name:{type:String,required:[!0,"Ad alanı zorunludur"],trim:!0,minlength:[2,"Ad en az 2 karakter olmalıdır"],maxlength:[50,"Ad en fazla 50 karakter olabilir"]},email:{type:String,required:[!0,"Email alanı zorunludur"],unique:!0,trim:!0,lowercase:!0,validate:{validator:function(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)},message:"Ge\xe7erli bir email adresi giriniz"}},password:{type:String,required:[!0,"Şifre alanı zorunludur"],minlength:[8,"Şifre en az 8 karakter olmalıdır"],select:!1},role:{type:String,required:[!0,"Rol alanı zorunludur"],enum:{values:["student","teacher"],message:"Ge\xe7erli bir rol se\xe7iniz"}},university:{type:String,required:[!0,"\xdcniversite alanı zorunludur"],trim:!0},isVerified:{type:Boolean,default:!1},verificationCode:String,verificationCodeExpires:Date,resetPasswordCode:String,resetPasswordExpires:Date,expertise:{type:String,default:"",trim:!0},createdAt:{type:Date,default:Date.now}},{timestamps:!0,strict:!0,strictQuery:!0,collection:"users"});o.index({email:1},{unique:!0});try{n().deleteModel("User")}catch(e){}let i=n().model("User",o)}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[1638,6206,6082,7439],()=>r(39403));module.exports=a})();