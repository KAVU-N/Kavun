"use strict";(()=>{var e={};e.id=420,e.ids=[420],e.modules={11185:e=>{e.exports=require("mongoose")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},92686:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>A,originalPathname:()=>w,patchFetch:()=>y,requestAsyncStorage:()=>p,routeModule:()=>m,serverHooks:()=>h,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>f});var n={};t.r(n),t.d(n,{GET:()=>c,OPTIONS:()=>d});var i=t(95419),o=t(69108),a=t(99678),s=t(78070),l=t(52055),u=t(22345);async function d(){return s.Z.json({},{headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, PUT, DELETE, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization","Access-Control-Allow-Credentials":"true"}})}async function c(e){try{let{searchParams:r}=new URL(e.url),t=r.get("id");if(!t)return s.Z.json({error:"Kullanıcı ID'si gerekli"},{status:400,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Credentials":"true"}});await (0,u.Z)();let n=await l.Z.findById(t);if(!n)return s.Z.json({error:"Kullanıcı bulunamadı"},{status:404,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Credentials":"true"}});return console.log("Found user:",{id:n._id,name:n.name,email:n.email,role:n.role,university:n.university,isVerified:n.isVerified}),s.Z.json({user:{id:n._id.toString(),name:n.name,email:n.email,role:n.role,university:n.university,isVerified:n.isVerified}},{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Credentials":"true"}})}catch(e){return console.error("Get user error:",e),s.Z.json({error:"Kullanıcı bilgileri alınırken bir hata oluştu"},{status:500,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Credentials":"true"}})}}let m=new i.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/auth/user/route",pathname:"/api/auth/user",filename:"route",bundlePath:"app/api/auth/user/route"},resolvedPagePath:"C:\\Users\\eren\\Kavun, organization\\app\\api\\auth\\user\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:p,staticGenerationAsyncStorage:g,serverHooks:h,headerHooks:A,staticGenerationBailout:f}=m,w="/api/auth/user/route";function y(){return(0,a.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:g})}},22345:(e,r,t)=>{t.d(r,{Z:()=>s});var n=t(11185),i=t.n(n);let o=process.env.MONGODB_URI;if(!o)throw Error("MongoDB URI bulunamadı. L\xfctfen .env dosyasını kontrol edin.");let a=global.mongoose||{conn:null,promise:null};global.mongoose||(global.mongoose=a);let s=async function(){if(a.conn)return a.conn;a.promise||(a.promise=i().connect(o,{bufferCommands:!1}).then(e=>e));try{a.conn=await a.promise}catch(e){throw a.promise=null,e}return a.conn}},52055:(e,r,t)=>{t.d(r,{Z:()=>a});var n=t(11185),i=t.n(n);let o=new n.Schema({name:{type:String,required:[!0,"Ad alanı zorunludur"],trim:!0,minlength:[2,"Ad en az 2 karakter olmalıdır"],maxlength:[50,"Ad en fazla 50 karakter olabilir"]},email:{type:String,required:[!0,"Email alanı zorunludur"],unique:!0,trim:!0,lowercase:!0,validate:{validator:function(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)},message:"Ge\xe7erli bir email adresi giriniz"}},password:{type:String,required:[!0,"Şifre alanı zorunludur"],minlength:[8,"Şifre en az 8 karakter olmalıdır"],select:!1},role:{type:String,required:[!0,"Rol alanı zorunludur"],enum:{values:["student","teacher"],message:"Ge\xe7erli bir rol se\xe7iniz"}},university:{type:String,required:[!0,"\xdcniversite alanı zorunludur"],trim:!0},isVerified:{type:Boolean,default:!1},verificationCode:String,verificationCodeExpires:Date,resetPasswordCode:String,resetPasswordExpires:Date,expertise:{type:String,default:"",trim:!0},createdAt:{type:Date,default:Date.now}},{timestamps:!0,strict:!0,strictQuery:!0,collection:"users"});o.index({email:1},{unique:!0});try{i().deleteModel("User")}catch(e){}let a=i().model("User",o)}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[1638,6206],()=>t(92686));module.exports=n})();